<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sd.dao.mapper.CheckchannelregMapper">
  <resultMap id="BaseResultMap" type="com.sd.dto.generate.Checkchannelreg">
    <id column="CHECKNBR" jdbcType="VARCHAR" property="checknbr" />
    <result column="CHANNELCODE" jdbcType="VARCHAR" property="channelcode" />
    <result column="FILENAME" jdbcType="VARCHAR" property="filename" />
    <result column="CHECKFLAG" jdbcType="VARCHAR" property="checkflag" />
    <result column="CHECKDATE" jdbcType="DATE" property="checkdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CHECKNBR, CHANNELCODE, FILENAME, CHECKFLAG, CHECKDATE
  </sql>
  <select id="selectByExample" parameterType="com.sd.dto.generate.CheckchannelregExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CHECKCHANNELREG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CHECKCHANNELREG
    where CHECKNBR = #{checknbr,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CHECKCHANNELREG
    where CHECKNBR = #{checknbr,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sd.dto.generate.CheckchannelregExample">
    delete from CHECKCHANNELREG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sd.dto.generate.Checkchannelreg">
    insert into CHECKCHANNELREG (CHECKNBR, CHANNELCODE, FILENAME, 
      CHECKFLAG, CHECKDATE)
    values (#{checknbr,jdbcType=VARCHAR}, #{channelcode,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, 
      #{checkflag,jdbcType=VARCHAR}, #{checkdate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.sd.dto.generate.Checkchannelreg">
    insert into CHECKCHANNELREG
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="checknbr != null">
        CHECKNBR,
      </if>
      <if test="channelcode != null">
        CHANNELCODE,
      </if>
      <if test="filename != null">
        FILENAME,
      </if>
      <if test="checkflag != null">
        CHECKFLAG,
      </if>
      <if test="checkdate != null">
        CHECKDATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="checknbr != null">
        #{checknbr,jdbcType=VARCHAR},
      </if>
      <if test="channelcode != null">
        #{channelcode,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="checkflag != null">
        #{checkflag,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null">
        #{checkdate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sd.dto.generate.CheckchannelregExample" resultType="java.lang.Long">
    select count(*) from CHECKCHANNELREG
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update CHECKCHANNELREG
    <set>
      <if test="record.checknbr != null">
        CHECKNBR = #{record.checknbr,jdbcType=VARCHAR},
      </if>
      <if test="record.channelcode != null">
        CHANNELCODE = #{record.channelcode,jdbcType=VARCHAR},
      </if>
      <if test="record.filename != null">
        FILENAME = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.checkflag != null">
        CHECKFLAG = #{record.checkflag,jdbcType=VARCHAR},
      </if>
      <if test="record.checkdate != null">
        CHECKDATE = #{record.checkdate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update CHECKCHANNELREG
    set CHECKNBR = #{record.checknbr,jdbcType=VARCHAR},
      CHANNELCODE = #{record.channelcode,jdbcType=VARCHAR},
      FILENAME = #{record.filename,jdbcType=VARCHAR},
      CHECKFLAG = #{record.checkflag,jdbcType=VARCHAR},
      CHECKDATE = #{record.checkdate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sd.dto.generate.Checkchannelreg">
    update CHECKCHANNELREG
    <set>
      <if test="channelcode != null">
        CHANNELCODE = #{channelcode,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        FILENAME = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="checkflag != null">
        CHECKFLAG = #{checkflag,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null">
        CHECKDATE = #{checkdate,jdbcType=DATE},
      </if>
    </set>
    where CHECKNBR = #{checknbr,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sd.dto.generate.Checkchannelreg">
    update CHECKCHANNELREG
    set CHANNELCODE = #{channelcode,jdbcType=VARCHAR},
      FILENAME = #{filename,jdbcType=VARCHAR},
      CHECKFLAG = #{checkflag,jdbcType=VARCHAR},
      CHECKDATE = #{checkdate,jdbcType=DATE}
    where CHECKNBR = #{checknbr,jdbcType=VARCHAR}
  </update>
</mapper>